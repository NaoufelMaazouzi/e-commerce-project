[{"D:\\Projet React\\e-commerce-project\\src\\index.js":"1","D:\\Projet React\\e-commerce-project\\src\\reportWebVitals.js":"2","D:\\Projet React\\e-commerce-project\\src\\App.js":"3","D:\\Projet React\\e-commerce-project\\src\\Components\\searchBar.js":"4","D:\\Projet React\\e-commerce-project\\src\\Components\\products.js":"5","D:\\Projet React\\e-commerce-project\\src\\Components\\productDetails.js":"6","D:\\Projet React\\e-commerce-project\\src\\Components\\signUp.js":"7","D:\\Projet React\\e-commerce-project\\src\\ReactRouterRoutes\\publicRoute.js":"8","D:\\Projet React\\e-commerce-project\\src\\firebase.js":"9","D:\\Projet React\\e-commerce-project\\src\\Components\\dashboard.js":"10","D:\\Projet React\\e-commerce-project\\src\\redux\\rootReducer.js":"11","D:\\Projet React\\e-commerce-project\\src\\redux\\products\\productsReducers.js":"12","D:\\Projet React\\e-commerce-project\\src\\redux\\products\\types.js":"13","D:\\Projet React\\e-commerce-project\\src\\redux\\products\\productsActions.js":"14","D:\\Projet React\\e-commerce-project\\src\\Components\\cart.js":"15"},{"size":821,"mtime":1607684167102,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":935,"mtime":1607703869973,"results":"19","hashOfConfig":"17"},{"size":13662,"mtime":1607705534611,"results":"20","hashOfConfig":"17"},{"size":6768,"mtime":1607703611813,"results":"21","hashOfConfig":"17"},{"size":7752,"mtime":1607703153437,"results":"22","hashOfConfig":"17"},{"size":7803,"mtime":1607621707288,"results":"23","hashOfConfig":"17"},{"size":407,"mtime":1607595752325,"results":"24","hashOfConfig":"17"},{"size":647,"mtime":1607688035056,"results":"25","hashOfConfig":"17"},{"size":800,"mtime":1607621738663,"results":"26","hashOfConfig":"17"},{"size":210,"mtime":1607684026287,"results":"27","hashOfConfig":"17"},{"size":673,"mtime":1607689971252,"results":"28","hashOfConfig":"17"},{"size":126,"mtime":1607684531588,"results":"29","hashOfConfig":"17"},{"size":814,"mtime":1607689955937,"results":"30","hashOfConfig":"17"},{"size":1228,"mtime":1607704027140,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"m7bitq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projet React\\e-commerce-project\\src\\index.js",[],["66","67"],"D:\\Projet React\\e-commerce-project\\src\\reportWebVitals.js",[],"D:\\Projet React\\e-commerce-project\\src\\App.js",[],"D:\\Projet React\\e-commerce-project\\src\\Components\\searchBar.js",["68","69"],"D:\\Projet React\\e-commerce-project\\src\\Components\\products.js",["70"],"D:\\Projet React\\e-commerce-project\\src\\Components\\productDetails.js",["71"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {\r\n    Box,\r\n    CircularProgress,\r\n    CardContent,\r\n    Typography,\r\n    CardMedia,\r\n    CardActionArea,\r\n    Card,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    imgContainer: {\r\n        maxWidth: 480,\r\n        minWidth: 470,\r\n        margin: theme.spacing(1)\r\n    },\r\n    media: {\r\n        height: 600,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginTop: '5%'\r\n    },\r\n    cardContent: {\r\n        marginTop: '5%'\r\n    }\r\n}));\r\n\r\n\r\nfunction ProductsComponent() {\r\n    const classes = useStyles();\r\n    const [product, setProduct] = useState([]);\r\n    const [size, setSize] = useState([]);\r\n    const [userInfos, setUserInfos] = useState();\r\n    const [error, setError] = useState('');\r\n    let params = useParams();\r\n\r\n    const handleChangeSize = (event) => {\r\n        setSize(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/products/${params.id}`)\r\n            .then(response => {\r\n                setProduct(response.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        auth.onAuthStateChanged(user => {\r\n            setUserInfos(user)\r\n        });\r\n    }, [])\r\n\r\n    const addToCart = (product, size) => {\r\n        if (!userInfos) {\r\n            return setError('Vous devez vous connecter pour ajouter au panier');\r\n        }\r\n        else if (!size.length) {\r\n            return setError('Veuillez choisir une taille');\r\n        }\r\n        axios.post('http://localhost:5000/productToCart/add', { id: userInfos.uid, product, size })\r\n            .then(() => {\r\n                setError()\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {product.length !== 0 ?\r\n                // <Grid container justify=\"center\" alignItems=\"center\">\r\n                //     <Grid item=\"true\" xs={3}>\r\n                //         <Card className={classes.root}>\r\n                //             <CardActionArea>\r\n                //                 <CardMedia\r\n                //                     className={classes.media}\r\n                //                     image={product.imgUrl}\r\n                //                     title=\"Contemplative Reptile\"\r\n                //                 />\r\n                //             </CardActionArea>\r\n                //         </Card>\r\n                //     </Grid>\r\n                //     <Grid item=\"true\" xs={3} >\r\n                //         <Paper>\r\n                //             Hello\r\n                //         </Paper>\r\n                //     </Grid>\r\n                // </Grid>\r\n\r\n                <div>\r\n                    <Grid container spacing={3} justify=\"center\">\r\n                        <Grid item xs={12}>\r\n                            {error && <Alert severity=\"error\">{error}</Alert>}\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} xl={4} md={12} lg={4} >\r\n                            <Card className={classes.imgContainer}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={product.imgUrl}\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={5} sm={12} xl={4} md={12}>\r\n                            <Card className={classes.imgContainer}>\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n                                        {product.name}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"h4\" component=\"h6\" >\r\n                                        <Box fontWeight=\"fontWeightBold\">\r\n                                            {product.prix && product.prix.toFixed(2)}â‚¬\r\n                                        </Box>\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"subtitle1\" component=\"h2\">\r\n                                        Couleur: {product.couleur}\r\n                                    </Typography>\r\n                                    <FormControl className={classes.formControl} >\r\n                                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                                            Taille\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                                            id=\"demo-simple-select-placeholder-label\"\r\n                                            value={size}\r\n                                            onChange={handleChangeSize}\r\n                                            displayEmpty\r\n                                            className={classes.selectEmpty}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Veuillez choisir</em>\r\n                                            </MenuItem>\r\n                                            <MenuItem value={'40'}>EU 40</MenuItem>\r\n                                            <MenuItem value={'40.5'}>EU 40.5</MenuItem>\r\n                                            <MenuItem value={'41'}>EU 41</MenuItem>\r\n                                            <MenuItem value={'41.5'}>EU 41.5</MenuItem>\r\n                                            <MenuItem value={'42'}>EU 42</MenuItem>\r\n                                            <MenuItem value={'42.5'}>EU 42.5</MenuItem>\r\n                                            <MenuItem value={'43'}>EU 43</MenuItem>\r\n                                            <MenuItem value={'43.5'}>EU 43.5</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Typography className={classes.button}>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={() => addToCart(product, size)}>\r\n                                            Ajouter au panier\r\n                                    </Button>\r\n                                    </Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                : <CircularProgress />\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ProductsComponent;\r\n","D:\\Projet React\\e-commerce-project\\src\\Components\\signUp.js",["72"],"import React, { useEffect } from 'react';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    CssBaseline,\r\n    TextField,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Link,\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    Container\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Link as LinkRouter } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://naoufelmaazouzi.fr/\">\r\n                Naoufel\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst handleChange = (e, setIdentifierState) => {\r\n    const value = e.target.value;\r\n    setIdentifierState(value);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [resetPasswordMessage, setResetPasswordMessage] = useState()\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const [signUp, setSignUp] = useState(location.state)\r\n\r\n    const handleAuthMethod = (e) => {\r\n        setSignUp(e);\r\n        setError();\r\n        setResetPasswordMessage();\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (signUp) {\r\n            await Axios.post('http://localhost:5000/signUp', { name, email, password })\r\n                .then((e) => {\r\n                    const token = e.data;\r\n                    auth.signInWithCustomToken(token)\r\n                        .then((user) => {\r\n                            console.log('User loged in:', user)\r\n                            history.push(\"/dashboard\");\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log('error', error.message)\r\n                        });\r\n                    setError('');\r\n                })\r\n                .catch(err => setError(err.response.data))\r\n        } else {\r\n            auth.signInWithEmailAndPassword(email, password)\r\n                .then((user) => {\r\n                    console.log('User loged in:', user)\r\n                    history.push(\"/dashboard\");\r\n                })\r\n                .catch((err) => {\r\n                    setError(err.message)\r\n                });\r\n        }\r\n    }\r\n\r\n    const resetPassword = () => {\r\n        auth.sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setResetPasswordMessage({\r\n                    message: 'Vous avez reÃ§u un email pour rÃ©initialiser votre mot de passe',\r\n                    style: 'success'\r\n                });\r\n            }).catch((err) => {\r\n                setResetPasswordMessage({\r\n                    message: 'Veuillez renseigner un email',\r\n                    style: 'error'\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {signUp ? 'Inscription' : 'Connexion'}\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    {error && <Alert severity=\"error\">{error}</Alert>}\r\n                    {resetPasswordMessage && <Alert severity={resetPasswordMessage.style}>{resetPasswordMessage.message}</Alert>}\r\n                    {signUp && <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Nom\"\r\n                        name=\"name\"\r\n                        autoFocus\r\n                        onChange={e => handleChange(e, setName)}\r\n                    />\r\n                    }\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Adresse email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={e => handleChange(e, setEmail)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Mot de passe\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={e => handleChange(e, setPassword)}\r\n                    />\r\n                    {!signUp &&\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Se souvenir de moi\"\r\n                        />\r\n                    }\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        {signUp ? \"S'inscrire\" : \"Se connecter\"}\r\n                    </Button>\r\n\r\n                    {signUp ?\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <LinkRouter to=\"/signUp\" onClick={() => handleAuthMethod(!signUp)}>\r\n                                    DÃ©jÃ  inscrit ? Se connecter\r\n                                </LinkRouter>\r\n                            </Grid>\r\n                        </Grid> :\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\" onClick={resetPassword}>\r\n                                    Mot de passe oubliÃ© ?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <LinkRouter to=\"/signUp\" onClick={() => handleAuthMethod(!signUp)}>\r\n                                    Vous n'avez pas de compte ? S'inscrire\r\n                                </LinkRouter>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container >\r\n    );\r\n}","D:\\Projet React\\e-commerce-project\\src\\ReactRouterRoutes\\publicRoute.js",[],"D:\\Projet React\\e-commerce-project\\src\\firebase.js",[],"D:\\Projet React\\e-commerce-project\\src\\Components\\dashboard.js",["73"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { auth } from '../firebase';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 340,\r\n        minWidth: 330,\r\n        margin: theme.spacing(1)\r\n    },\r\n    media: {\r\n        height: 400,\r\n    },\r\n    name: {\r\n        color: 'grey',\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\n\r\nfunction Dashboard() {\r\n    const classes = useStyles();\r\n    const [userInfos, setUserInfos] = useState()\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            setUserInfos(user)\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {userInfos && userInfos.providerData[0].email}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\Projet React\\e-commerce-project\\src\\redux\\rootReducer.js",[],"D:\\Projet React\\e-commerce-project\\src\\redux\\products\\productsReducers.js",[],"D:\\Projet React\\e-commerce-project\\src\\redux\\products\\types.js",[],"D:\\Projet React\\e-commerce-project\\src\\redux\\products\\productsActions.js",[],"D:\\Projet React\\e-commerce-project\\src\\Components\\cart.js",["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":120,"column":12,"nodeType":"82","messageId":"83","endLine":120,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":142,"column":8,"nodeType":"86","endLine":142,"endColumn":10,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":59,"column":8,"nodeType":"86","endLine":59,"endColumn":10,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"90","line":80,"column":8,"nodeType":"86","endLine":80,"endColumn":10,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"92","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"93","line":22,"column":11,"nodeType":"82","messageId":"83","endLine":22,"endColumn":18},{"ruleId":"80","severity":1,"message":"93","line":23,"column":11,"nodeType":"82","messageId":"83","endLine":23,"endColumn":18},{"ruleId":"80","severity":1,"message":"94","line":24,"column":12,"nodeType":"82","messageId":"83","endLine":24,"endColumn":21},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'array' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productsInCart'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array. If 'fetchProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["98"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["99"],"'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'userInfos' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [productsInCart]",{"range":"106","text":"107"},"Update the dependencies array to be: [fetchProducts]",{"range":"108","text":"109"},"Update the dependencies array to be: [params.id]",{"range":"110","text":"111"},[4564,4566],"[productsInCart]",[1580,1582],"[fetchProducts]",[1912,1914],"[params.id]"]