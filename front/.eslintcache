[{"D:\\Projet React\\e-commerce-project\\front\\src\\index.js":"1","D:\\Projet React\\e-commerce-project\\front\\src\\App.js":"2","D:\\Projet React\\e-commerce-project\\front\\src\\reportWebVitals.js":"3","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\rootReducer.js":"4","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\productDetails.js":"5","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\products.js":"6","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\signUp.js":"7","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\dashboard.js":"8","D:\\Projet React\\e-commerce-project\\front\\src\\ReactRouterRoutes\\publicRoute.js":"9","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\cart.js":"10","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\searchBar.js":"11","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\products\\productsReducers.js":"12","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\productsInCart\\productsInCartReducers.js":"13","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\userInfos\\userInfosReducers.js":"14","D:\\Projet React\\e-commerce-project\\front\\src\\firebase.js":"15","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\products\\productsActions.js":"16","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\productsInCart\\productsInCartActions.js":"17","D:\\Projet React\\e-commerce-project\\front\\src\\apiKey.js":"18","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\userInfos\\userInfosActions.js":"19","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\types.js":"20"},{"size":821,"mtime":1607684167102,"results":"21","hashOfConfig":"22"},{"size":935,"mtime":1607703869973,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":432,"mtime":1615814929980,"results":"25","hashOfConfig":"22"},{"size":6808,"mtime":1617615745633,"results":"26","hashOfConfig":"22"},{"size":6649,"mtime":1617615754194,"results":"27","hashOfConfig":"22"},{"size":7786,"mtime":1617615781306,"results":"28","hashOfConfig":"22"},{"size":800,"mtime":1607621738663,"results":"29","hashOfConfig":"22"},{"size":407,"mtime":1607595752325,"results":"30","hashOfConfig":"22"},{"size":8191,"mtime":1615825856453,"results":"31","hashOfConfig":"22"},{"size":13657,"mtime":1617615765688,"results":"32","hashOfConfig":"22"},{"size":674,"mtime":1615813260765,"results":"33","hashOfConfig":"22"},{"size":543,"mtime":1615814379072,"results":"34","hashOfConfig":"22"},{"size":693,"mtime":1615816124124,"results":"35","hashOfConfig":"22"},{"size":647,"mtime":1607688035056,"results":"36","hashOfConfig":"22"},{"size":797,"mtime":1617615812015,"results":"37","hashOfConfig":"22"},{"size":750,"mtime":1615814024812,"results":"38","hashOfConfig":"22"},{"size":92,"mtime":1615762010075,"results":"39","hashOfConfig":"22"},{"size":792,"mtime":1615816441496,"results":"40","hashOfConfig":"22"},{"size":341,"mtime":1615816041930,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pkqrzk",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projet React\\e-commerce-project\\front\\src\\index.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\App.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\reportWebVitals.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\redux\\rootReducer.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\Components\\productDetails.js",["88"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {\r\n    Box,\r\n    CircularProgress,\r\n    CardContent,\r\n    Typography,\r\n    CardMedia,\r\n    Card,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    imgContainer: {\r\n        maxWidth: 480,\r\n        minWidth: 470,\r\n        margin: theme.spacing(1)\r\n    },\r\n    media: {\r\n        height: 600,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginTop: '5%'\r\n    },\r\n    cardContent: {\r\n        marginTop: '5%'\r\n    },\r\n    container: {\r\n        width: '99%'\r\n    }\r\n}));\r\n\r\n\r\nfunction ProductsComponent() {\r\n    const classes = useStyles();\r\n    const [product, setProduct] = useState([]);\r\n    const [size, setSize] = useState([]);\r\n    const [userInfos, setUserInfos] = useState();\r\n    const [error, setError] = useState('');\r\n    let params = useParams();\r\n\r\n    const handleChangeSize = (event) => {\r\n        setSize(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/products/${params.id}`)\r\n            .then(response => {\r\n                setProduct(response.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n        auth.onAuthStateChanged(user => {\r\n            setUserInfos(user)\r\n        });\r\n    }, [])\r\n\r\n    const addToCart = (product, size) => {\r\n        if (!userInfos) {\r\n            return setError('Vous devez vous connecter pour ajouter au panier');\r\n        }\r\n        else if (!size.length) {\r\n            return setError('Veuillez choisir une taille');\r\n        }\r\n        axios.post(`/api/productToCart/add`, { id: userInfos.uid, product, size })\r\n            .then(() => {\r\n                setError()\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {product.length !== 0 ?\r\n                <div>\r\n                    <Grid container spacing={3} justify=\"center\">\r\n                        <Grid item xs={12}>\r\n                            {error && <Alert severity=\"error\">{error}</Alert>}\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={12} xl={4} md={12} lg={4} >\r\n                            <Card className={classes.imgContainer}>\r\n                                <CardContent>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={product.imgUrl}\r\n                                    />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={5} sm={12} xl={4} md={12}>\r\n                            <Card className={classes.imgContainer}>\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n                                        {product.name}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"h4\" component=\"h6\" >\r\n                                        <Box fontWeight=\"fontWeightBold\">\r\n                                            {product.prix && product.prix.toFixed(2)}€\r\n                                        </Box>\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"subtitle1\" component=\"h2\">\r\n                                        Couleur: {product.couleur}\r\n                                    </Typography>\r\n                                    <FormControl className={classes.formControl} >\r\n                                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                                            Taille\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                                            id=\"demo-simple-select-placeholder-label\"\r\n                                            value={size}\r\n                                            onChange={handleChangeSize}\r\n                                            displayEmpty\r\n                                            className={classes.selectEmpty}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Veuillez choisir</em>\r\n                                            </MenuItem>\r\n                                            <MenuItem value={'40'}>EU 40</MenuItem>\r\n                                            <MenuItem value={'40.5'}>EU 40.5</MenuItem>\r\n                                            <MenuItem value={'41'}>EU 41</MenuItem>\r\n                                            <MenuItem value={'41.5'}>EU 41.5</MenuItem>\r\n                                            <MenuItem value={'42'}>EU 42</MenuItem>\r\n                                            <MenuItem value={'42.5'}>EU 42.5</MenuItem>\r\n                                            <MenuItem value={'43'}>EU 43</MenuItem>\r\n                                            <MenuItem value={'43.5'}>EU 43.5</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Typography className={classes.button}>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={() => addToCart(product, size)}>\r\n                                            Ajouter au panier\r\n                                    </Button>\r\n                                    </Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                : <CircularProgress />\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ProductsComponent;\r\n","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\products.js",["89"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { auth } from '../firebase';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProducts } from '../redux/products/productsActions';\r\nimport {\r\n    CircularProgress,\r\n    CardContent,\r\n    Typography,\r\n    CardMedia,\r\n    Card,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    CardActions\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 340,\r\n        minWidth: 330,\r\n        margin: theme.spacing(2),\r\n        boxShadow: \"0 8px 20px -12px rgba(0,0,0,0.3)\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0 16px 40px -12.125px rgba(0,0,0,0.3)\"\r\n        }\r\n    },\r\n    media: {\r\n        height: 400,\r\n    },\r\n    name: {\r\n        color: 'grey',\r\n        textDecoration: 'none'\r\n    }\r\n\r\n}));\r\n\r\n\r\nfunction ProductsComponent({ productsFetched, fetchProducts }) {\r\n    const classes = useStyles();\r\n    const [userInfos, setUserInfos] = useState();\r\n    const [error, setError] = useState('');\r\n    const [size, setSize] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n        auth.onAuthStateChanged(user => {\r\n            setUserInfos(user)\r\n        });\r\n    }, [])\r\n\r\n    const addToCart = (product, size) => {\r\n        if (!userInfos) {\r\n            return setError('Vous devez vous connecter pour ajouter au panier');\r\n        }\r\n        else if (!size.length) {\r\n            return setError('Veuillez choisir une taille');\r\n        }\r\n        axios.post('/api/productToCart/add', { id: userInfos.uid, product, size })\r\n            .then(() => {\r\n                setError()\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const handleChangeSize = (event) => {\r\n        setSize(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {productsFetched && productsFetched.length ?\r\n                <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        {error && <Alert severity=\"error\">{error}</Alert>}\r\n                    </Grid>\r\n                    {productsFetched.map(product =>\r\n                        <Grid item key={product.name} >\r\n                            <Card className={classes.root}>\r\n                                <CardContent>\r\n                                    <Link to={`/product/${product.id}`} style={{ textDecoration: 'none' }} key={product.name}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            className={classes.media}\r\n                                            image={product.imgUrl}\r\n                                        />\r\n                                    </Link>\r\n\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {product.name}\r\n                                        </Typography>\r\n                                        <Typography gutterBottom className={classes.name} variant=\"h6\" component=\"h6\">\r\n                                            {product.prix && product.prix.toFixed(2)}€\r\n                                            </Typography>\r\n                                        <FormControl className={classes.formControl} >\r\n                                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                                                Taille\r\n                                        </InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-placeholder-label-label\"\r\n                                                id=\"demo-simple-select-placeholder-label\"\r\n                                                value={size}\r\n                                                onChange={handleChangeSize}\r\n                                                displayEmpty\r\n                                                className={classes.selectEmpty}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>Veuillez choisir</em>\r\n                                                </MenuItem>\r\n                                                <MenuItem value={'40'}>EU 40</MenuItem>\r\n                                                <MenuItem value={'40.5'}>EU 40.5</MenuItem>\r\n                                                <MenuItem value={'41'}>EU 41</MenuItem>\r\n                                                <MenuItem value={'41.5'}>EU 41.5</MenuItem>\r\n                                                <MenuItem value={'42'}>EU 42</MenuItem>\r\n                                                <MenuItem value={'42.5'}>EU 42.5</MenuItem>\r\n                                                <MenuItem value={'43'}>EU 43</MenuItem>\r\n                                                <MenuItem value={'43.5'}>EU 43.5</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </CardContent>\r\n                                    <CardActions disableSpacing>\r\n                                        <IconButton aria-label=\"add to favorites\" onClick={() => addToCart(product, size)}>\r\n                                            <AddShoppingCartIcon />\r\n                                        </IconButton>\r\n                                    </CardActions>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    )}\r\n                </Grid>\r\n\r\n\r\n                : <CircularProgress />\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productsFetched: state.products.productsFetched,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchProducts: () => dispatch(fetchProducts())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsComponent);\r\n","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\signUp.js",["90"],"import React, { useEffect } from 'react';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    CssBaseline,\r\n    TextField,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Link,\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    Container\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Link as LinkRouter } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://naoufelmaazouzi.fr/\">\r\n                Naoufel\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst handleChange = (e, setIdentifierState) => {\r\n    const value = e.target.value;\r\n    setIdentifierState(value);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [resetPasswordMessage, setResetPasswordMessage] = useState()\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const [signUp, setSignUp] = useState(location.state)\r\n\r\n    const handleAuthMethod = (e) => {\r\n        setSignUp(e);\r\n        setError();\r\n        setResetPasswordMessage();\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (signUp) {\r\n            await Axios.post(`/api/signUp`, { name, email, password })\r\n                .then((e) => {\r\n                    const token = e.data;\r\n                    auth.signInWithCustomToken(token)\r\n                        .then((user) => {\r\n                            console.log('User loged in:', user)\r\n                            history.push(\"/dashboard\");\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log('error', error.message)\r\n                        });\r\n                    setError('');\r\n                })\r\n                .catch(err => setError(err.response.data))\r\n        } else {\r\n            auth.signInWithEmailAndPassword(email, password)\r\n                .then((user) => {\r\n                    console.log('User loged in:', user)\r\n                    history.push(\"/dashboard\");\r\n                })\r\n                .catch((err) => {\r\n                    setError(err.message)\r\n                });\r\n        }\r\n    }\r\n\r\n    const resetPassword = () => {\r\n        auth.sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setResetPasswordMessage({\r\n                    message: 'Vous avez reçu un email pour réinitialiser votre mot de passe',\r\n                    style: 'success'\r\n                });\r\n            }).catch((err) => {\r\n                setResetPasswordMessage({\r\n                    message: 'Veuillez renseigner un email',\r\n                    style: 'error'\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {signUp ? 'Inscription' : 'Connexion'}\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    {error && <Alert severity=\"error\">{error}</Alert>}\r\n                    {resetPasswordMessage && <Alert severity={resetPasswordMessage.style}>{resetPasswordMessage.message}</Alert>}\r\n                    {signUp && <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Nom\"\r\n                        name=\"name\"\r\n                        autoFocus\r\n                        onChange={e => handleChange(e, setName)}\r\n                    />\r\n                    }\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Adresse email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={e => handleChange(e, setEmail)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Mot de passe\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={e => handleChange(e, setPassword)}\r\n                    />\r\n                    {!signUp &&\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Se souvenir de moi\"\r\n                        />\r\n                    }\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        {signUp ? \"S'inscrire\" : \"Se connecter\"}\r\n                    </Button>\r\n\r\n                    {signUp ?\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <LinkRouter to=\"/signUp\" onClick={() => handleAuthMethod(!signUp)}>\r\n                                    Déjà inscrit ? Se connecter\r\n                                </LinkRouter>\r\n                            </Grid>\r\n                        </Grid> :\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\" onClick={resetPassword}>\r\n                                    Mot de passe oublié ?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <LinkRouter to=\"/signUp\" onClick={() => handleAuthMethod(!signUp)}>\r\n                                    Vous n'avez pas de compte ? S'inscrire\r\n                                </LinkRouter>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container >\r\n    );\r\n}","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\dashboard.js",["91"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { auth } from '../firebase';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 340,\r\n        minWidth: 330,\r\n        margin: theme.spacing(1)\r\n    },\r\n    media: {\r\n        height: 400,\r\n    },\r\n    name: {\r\n        color: 'grey',\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\n\r\nfunction Dashboard() {\r\n    const classes = useStyles();\r\n    const [userInfos, setUserInfos] = useState()\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            setUserInfos(user)\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {userInfos && userInfos.providerData[0].email}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\Projet React\\e-commerce-project\\front\\src\\ReactRouterRoutes\\publicRoute.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\Components\\cart.js",["92"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport {  useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProductsInCart } from '../redux/productsInCart/productsInCartActions';\r\nimport {\r\n    CircularProgress,\r\n    CardContent,\r\n    Typography,\r\n    Card,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    Button,\r\n    Divider,\r\n    CardMedia,\r\n    Grid,\r\n    IconButton\r\n} from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 340,\r\n        minWidth: 330,\r\n        margin: theme.spacing(1)\r\n    },\r\n    media: {\r\n        height: 200,\r\n        width: 200,\r\n        marginLeft: 30,\r\n    },\r\n    name: {\r\n        color: 'grey',\r\n        textDecoration: 'none'\r\n    },\r\n    divProduct: {\r\n        display: 'flex',\r\n        marginBottom: 30,\r\n        marginTop: 30\r\n    },\r\n    divCardContent: {\r\n        width: '60%',\r\n    },\r\n    cardContentH2: {\r\n       paddingBottom: 0 \r\n    },\r\n    clearProduct: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    container: {\r\n        width: '99%'\r\n    },\r\n    divPrice: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    h2: {\r\n        marginBottom: 30\r\n    },\r\n    divButtonPaiement: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\n\r\nfunction Dashboard({ fetchProductsInCart, productsInCartFetched }) {\r\n    const classes = useStyles();\r\n    const [livraisonType, setLivraisonType] = useState([]);\r\n\r\n     useEffect(() => {\r\n        fetchProductsInCart()\r\n     }, []);\r\n\r\n     const handleChangeLivraison = (event) => {\r\n        setLivraisonType(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {productsInCartFetched?.length !== 0 ?\r\n                <div>\r\n                    <Grid container spacing={2} justify=\"center\">\r\n                        {/* <Grid item xs={12}>\r\n                            {error && <Alert severity=\"error\">{error}</Alert>}\r\n                        </Grid> */}\r\n                        <Grid item xs={4} sm={12} xl={4} md={12} lg={5} >\r\n                            <Card>\r\n                                <CardContent className={classes.cardContentH2}>\r\n                                    <Typography variant=\"h4\" component=\"h2\">\r\n                                        Mon panier\r\n                                        <Divider />\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                    {productsInCartFetched?.map(product =>\r\n                                    <>\r\n                                    <div className={classes.divProduct}>\r\n                                        <CardMedia className={classes.media} image={product.imgUrl} />\r\n                                        <CardContent className={classes.divCardContent}>\r\n                                            <div className={classes.clearProduct}>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h3\">\r\n                                                    {product.prix}€\r\n                                                </Typography>\r\n                                                <IconButton>\r\n                                                    <ClearIcon/>\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <Typography gutterBottom variant=\"subtitle1\" component=\"h3\">\r\n                                                {product.name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                    <Divider />\r\n                                    </>\r\n                                    )}\r\n                            </Card>\r\n                            \r\n                        </Grid>\r\n                        <Grid item xs={12} lg={3} sm={12} xl={4} md={12}>\r\n                            <Card>\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography gutterBottom variant=\"h4\" component=\"h2\" className={classes.h2}>\r\n                                        Total\r\n                                        <Divider />\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"subtitle1\" component=\"h2\" className={classes.h2}>\r\n                                        <div className={classes.divPrice}>\r\n                                            <div>\r\n                                                Sous-Total\r\n                                            </div>\r\n                                            <div>\r\n                                                {productsInCartFetched?.reduce((a, b) => a.prix+b.prix)}€\r\n                                            </div>\r\n                                        </div>\r\n                                        <Divider />\r\n                                    </Typography>\r\n                                    <FormControl className={classes.h2} >\r\n                                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                                            Livraison\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                                            id=\"demo-simple-select-placeholder-label\"\r\n                                            value={livraisonType}\r\n                                            onChange={handleChangeLivraison}\r\n                                            displayEmpty\r\n                                            className={classes.selectEmpty}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>Veuillez choisir</em>\r\n                                            </MenuItem>\r\n                                            <MenuItem value={'Livraison standard (Gratuit)'}>Livraison standard (Gratuit)</MenuItem>\r\n                                            <MenuItem value={'Livraison 24h en point relais (10.00€)'}>Livraison 24h en point relais (10.00€)</MenuItem>\r\n                                            <MenuItem value={'Livraison standard en point relais (Gratuit)'}>Livraison standard en point relais (Gratuit)</MenuItem>\r\n                                            <MenuItem value={'Jour de livraison (10.00€)'}>Jour de livraison (10.00€)</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Typography className={classes.button}>\r\n                                        <div  className={classes.divButtonPaiement}>\r\n                                            <Button variant=\"contained\" color=\"success\">\r\n                                                Paiement\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                : <CircularProgress />\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productsInCartFetched: state.productsInCart.productsInCartFetched,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchProductsInCart: () => dispatch(fetchProductsInCart())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n\r\n\r\n","D:\\Projet React\\e-commerce-project\\front\\src\\Components\\searchBar.js",["93","94","95"],"import { useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n    InputBase,\r\n    Badge,\r\n    MenuItem,\r\n    Menu,\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Grid,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { connect } from 'react-redux';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Axios from 'axios';\r\nimport apiRest from '../apiKey';\r\nimport { fetchProductsInCart } from '../redux/productsInCart/productsInCartActions';\r\nimport { fetchUserInfos, removeUserInfos } from '../redux/userInfos/userInfosActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    deconnexion: {\r\n        marginLeft: '0.1%'\r\n    },\r\n    linkRouter: {\r\n        color: '#FFF',\r\n        textDecoration: 'none'\r\n    },\r\n    linkRouterMobile: {\r\n        color: '#000000',\r\n        textDecoration: 'none'\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    root: {\r\n        maxWidth: 240,\r\n        minWidth: 230,\r\n        margin: theme.spacing(2),\r\n    },\r\n    media: {\r\n        height: 150,\r\n    },\r\n    panierButton: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nfunction SearchBar({ productsInCartFetched, fetchProductsInCart, fetchUserInfos, removeUserInfos, userInfosFetched }) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n    let history = useHistory();\r\n    const [array, setarray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchProductsInCart();\r\n        fetchUserInfos();\r\n        const arrayy = productsInCartFetched && productsInCartFetched.length && productsInCartFetched.map(e => {\r\n            return e.prix\r\n        })\r\n        setarray(arrayy);\r\n    }, []);\r\n    const deleteFromCart = (product) => {\r\n        Axios.post(`/api/productToCart/delete`, { id: userInfosFetched.uid, product })\r\n            .then(response => {\r\n                console.log('ok')\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleSignOut = () => {\r\n        auth.signOut()\r\n            .then(() => {\r\n                console.log('user signed out')\r\n                removeUserInfos();\r\n                history.push(\"/\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            {userInfosFetched && productsInCartFetched && productsInCartFetched.map((product, i) =>\r\n                <Card className={classes.root} key={i}>\r\n                    <CardContent>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    className={classes.media}\r\n                                    image={product.imgUrl}\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                        {product.prix}€\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n                                        {product.name}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n                                        {product.couleur}\r\n                                    </Typography>\r\n                                    <IconButton aria-label=\"add to favorites\" onClick={() => deleteFromCart(product)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </CardContent>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n            {userInfosFetched && productsInCartFetched && productsInCartFetched.length ?\r\n                <Link to=\"/panier\" className={classes.linkRouterMobile} onClick={handleMenuClose}>\r\n                    <div className={classes.panierButton}>\r\n                        <Button variant=\"contained\" color=\"primary\">Voir panier</Button>\r\n                    </div>\r\n                </Link> : \r\n                <Link to=\"/signUp\" className={classes.linkRouterMobile} onClick={handleMenuClose}>\r\n                <MenuItem>Se connecter pour voir mon panier</MenuItem>\r\n            </Link>}\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={userInfosFetched && productsInCartFetched && productsInCartFetched.length} color=\"secondary\" >\r\n                        <ShoppingBasketIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Mon panier</p>\r\n            </MenuItem>\r\n            {userInfosFetched &&\r\n                <Link to=\"/dashboard\" className={classes.linkRouterMobile}>\r\n                    <MenuItem onClick={handleMobileMenuClose}>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"primary-search-account-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                            onClick={handleMenuClose}\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <p>Mon compte</p>\r\n                    </MenuItem>\r\n                </Link>\r\n            }\r\n        </Menu >\r\n    );\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Link to=\"/\" className={classes.linkRouter}>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            E-Commerce\r\n                    </Typography>\r\n                    </Link>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" onClick={handleProfileMenuOpen}>\r\n                            <Badge badgeContent={userInfosFetched && productsInCartFetched && productsInCartFetched.length} color=\"secondary\" >\r\n                                <ShoppingBasketIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        {userInfosFetched &&\r\n                            <Link to=\"/dashboard\" className={classes.linkRouter}>\r\n                                <IconButton\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-controls=\"primary-search-account-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <AccountCircle />\r\n                                </IconButton>\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                    {userInfosFetched ?\r\n                        <Button onClick={handleSignOut} variant=\"contained\" color=\"primary\" disableElevation className={classes.deconnexion}>\r\n                            Deconnexion\r\n                        </Button> :\r\n                        <Link to=\"/signUp\" className={classes.linkRouter}>\r\n                            <Button variant=\"contained\" color=\"primary\" disableElevation>\r\n                                Connexion\r\n                            </Button>\r\n                        </Link>\r\n                    }\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productsInCartFetched: state.productsInCart.productsInCartFetched,\r\n        userInfosFetched: state.userInfos.userInfosFetched,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchProductsInCart: () => dispatch(fetchProductsInCart()),\r\n        fetchUserInfos: () => dispatch(fetchUserInfos()),\r\n        removeUserInfos: () => dispatch(removeUserInfos())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","D:\\Projet React\\e-commerce-project\\front\\src\\redux\\products\\productsReducers.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\redux\\productsInCart\\productsInCartReducers.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\redux\\userInfos\\userInfosReducers.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\firebase.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\redux\\products\\productsActions.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\redux\\productsInCart\\productsInCartActions.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\apiKey.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\redux\\userInfos\\userInfosActions.js",[],"D:\\Projet React\\e-commerce-project\\front\\src\\redux\\types.js",[],{"ruleId":"96","severity":1,"message":"97","line":82,"column":8,"nodeType":"98","endLine":82,"endColumn":10,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":58,"column":8,"nodeType":"98","endLine":58,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":22,"column":11,"nodeType":"104","messageId":"105","endLine":22,"endColumn":18},{"ruleId":"96","severity":1,"message":"107","line":77,"column":9,"nodeType":"98","endLine":77,"endColumn":11,"suggestions":"108"},{"ruleId":"102","severity":1,"message":"109","line":29,"column":8,"nodeType":"104","messageId":"105","endLine":29,"endColumn":15},{"ruleId":"102","severity":1,"message":"110","line":125,"column":12,"nodeType":"104","messageId":"105","endLine":125,"endColumn":17},{"ruleId":"96","severity":1,"message":"111","line":134,"column":8,"nodeType":"98","endLine":134,"endColumn":10,"suggestions":"112"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array. If 'fetchProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProductsInCart'. Either include it or remove the dependency array. If 'fetchProductsInCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["115"],"'apiRest' is defined but never used.","'array' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchProductsInCart', 'fetchUserInfos', and 'productsInCartFetched'. Either include them or remove the dependency array. If 'fetchProductsInCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["116"],{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [params.id]",{"range":"125","text":"126"},"Update the dependencies array to be: [fetchProducts]",{"range":"127","text":"128"},"Update the dependencies array to be: [fetchProductsInCart]",{"range":"129","text":"130"},"Update the dependencies array to be: [fetchProductsInCart, fetchUserInfos, productsInCartFetched]",{"range":"131","text":"132"},[1922,1924],"[params.id]",[1559,1561],"[fetchProducts]",[1721,1723],"[fetchProductsInCart]",[3879,3881],"[fetchProductsInCart, fetchUserInfos, productsInCartFetched]"]